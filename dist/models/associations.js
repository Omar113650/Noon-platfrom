"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const User_1 = __importDefault(require("./User"));
const Category_1 = __importDefault(require("./Category"));
const Address_1 = __importDefault(require("./Address"));
const CartItem_1 = __importDefault(require("./CartItem"));
const Cart_1 = __importDefault(require("./Cart"));
const Product_1 = __importDefault(require("./Product"));
const Offer_1 = __importDefault(require("./Offer"));
const Order_1 = __importDefault(require("./Order"));
const OrderItem_1 = __importDefault(require("./OrderItem"));
// import SuugestProduct from "./SuugestedProduct";
User_1.default.hasMany(Product_1.default, { foreignKey: "UserID", as: "Products" });
Product_1.default.belongsTo(User_1.default, { foreignKey: "UserID", as: "users" });
User_1.default.hasMany(Address_1.default, { foreignKey: "UserID", as: "Addresses" });
Address_1.default.belongsTo(User_1.default, { foreignKey: "UserID", as: "User" });
User_1.default.hasOne(Cart_1.default, { foreignKey: "UserID", as: "Cart" });
Cart_1.default.belongsTo(User_1.default, { foreignKey: "UserID", as: "User" });
// Cart.hasMany(CarItem, { foreignKey: "CartID", as: "CartItems" });
// CarItem.belongsTo(Cart, { foreignKey: "CartID", as: "Cart" });
// Product.hasMany(CarItem, { foreignKey: "ProductID", as: "CartItems" });
// CarItem.belongsTo(Product, { foreignKey: "ProductID", as: "Product" });
Cart_1.default.hasMany(CartItem_1.default, { foreignKey: "cartId", as: "CartItems" });
CartItem_1.default.belongsTo(Cart_1.default, { foreignKey: "cartId", as: "Cart" });
Product_1.default.hasMany(CartItem_1.default, { foreignKey: "productId", as: "CartItems" });
CartItem_1.default.belongsTo(Product_1.default, { foreignKey: "productId", as: "Product" });
Category_1.default.hasMany(Product_1.default, { foreignKey: "CategoryID", as: "Products" });
Product_1.default.belongsTo(Category_1.default, { foreignKey: "CategoryID", as: "Category" });
// Product.hasMany(SuugestProduct, { foreignKey: "ProductID", as: "Suggestions" });
// SuugestProduct.belongsTo(Product, { foreignKey: "ProductID", as: "Product" });
Product_1.default.hasOne(Offer_1.default, { foreignKey: "ProductID", as: "Offer" });
Offer_1.default.belongsTo(Product_1.default, { foreignKey: "ProductID", as: "Product" });
User_1.default.hasMany(Order_1.default, { foreignKey: "userId", as: "Orders" });
Order_1.default.belongsTo(User_1.default, { foreignKey: "userId", as: "User" });
Order_1.default.hasMany(OrderItem_1.default, { foreignKey: "OrderID", as: "OrderItems" });
OrderItem_1.default.belongsTo(Order_1.default, { foreignKey: "OrderID", as: "Order" });
Product_1.default.hasMany(OrderItem_1.default, { foreignKey: "ProductID", as: "OrderItems" });
OrderItem_1.default.belongsTo(Product_1.default, { foreignKey: "ProductID", as: "Product" });
CartItem_1.default.belongsTo(Product_1.default, { foreignKey: "productId", as: "product" });
// لو حابب، يمكن تربط العكس لو لازم
Product_1.default.hasMany(CartItem_1.default, { foreignKey: "productId", as: "cartItems" });
